import numpy as np
import matplotlib.pyplot as plt
x = [128, 144, 192, 384, 480, 576, 704, 800, 960, 1024, 1152, 1408, 1520, 1664, 1792, 1920, 2048]
#x = [0.04,    0.05,   0.16,   0.32,   0.61,   0.90,   1.31,   2.86,   3.93,   5.89,   7.37,   8.11,   8.84,   10,     14.41,  15.72,  19.66]
y1 = [0.10, 0.014, 0.025, 0.1, 0.141, 0.234, 0.579, 0.721, 1.258, 1.597, 1.877, 2.323, 2.664, 3.276, 3.547, 4.163, 6.787]
y2 = [0.0387, 0.0362, 0.0723, 0.2502, 0.4737, 0.6412, 0.9004, 1.1976, 2.2759, 2.8831, 3.3378, 4.0936, 4.7218, 5.6494, 6.8987, 7.4876, 10.4960]
yy1 =[211.923, 262.040, 451.556, 1697.195, 2626.450, 3741.489, 5576.561, 6768.537, 9941.849, 11730.689, 12824.494, 14431.263, 17348.459, 21415.093, 26282.425, 33194.014, 47642.180]
yy2 = [36.182, 41.547, 62.597, 190.574, 286.580, 395.510, 578.236, 697.010, 999.236, 1154.810, 1239.493, 1331.258, 1473.858, 2131.142, 2592.772, 3265.953, 4677.809]



'''plt.rcParams['savefig.dpi'] = 300 #图片像素
plt.rcParams['figure.dpi'] = 300 #分辨率
plt.xlim(100, 2100)
plt.ylim(0, 11)
my_x_ticks = np.arange(100, 2200, 200)
my_y_ticks = np.arange(0, 12, 1)
plt.xticks(my_x_ticks)
plt.yticks(my_y_ticks)
l1=plt.plot(x,y1,'r--',label='BasicVersion')
l2=plt.plot(x,y2,'g--',label='EfficientVersion')
plt.plot(x,y1,'ro-',x,y2,'go-', ms=3)
plt.title('CPU Time vs Problem Size')
plt.xlabel('Problem Size m+n')
plt.ylabel('CPU Time (s)')
plt.legend()
plt.savefig('./CPUPlot.png')'''

plt.rcParams['savefig.dpi'] = 300 #图片像素
plt.rcParams['figure.dpi'] = 300 #分辨率
plt.xlim(100, 2100)
plt.ylim(0, 50000)
my_x_ticks = np.arange(100, 2200, 200)
my_y_ticks = np.arange(0, 50000, 2500)
plt.xticks(my_x_ticks)
plt.yticks(my_y_ticks)
l11=plt.plot(x,yy1,'r--',label='BasicVersion')
l21=plt.plot(x,yy2,'g--',label='EfficientVersion')
plt.plot(x, yy1,'ro-',x, yy2,'go-', ms=3)
plt.title('Memory Usage vs Problem Size')
plt.xlabel('Problem Size m+n')
plt.ylabel('Memory Usage (KB)')
plt.legend()
plt.savefig('./MemoryPlot.png')



'''
Size(1*10^5)     TimeN(s)    MemN(KB)    TimeH(s)    MemH(kb)
0 0.04             0.0115      211.923     0.0313.     36.182
1 0.05             0.0139      262.04      0.0403      41.547
2 0.16             0.0439      750.43      0.1102      93.269
3 0.61             0.1619      2783.186    0.4143      298.821
4 1.31             0.5873      5883.882    1.4512.     608.657
5 0.32             0.0904      1580.003    0.2268      187.14
6 2.86             1.2164      13039.599.  2.5216.     1287.562
7 5.89             2.6962.     27018.923.  5.5620.     2670.646
8 8.11             3.7202.     37125.746.  8.8212.     3654.109
9 10               6.1800.     47639.515.  10.5546.    4677.854
10 0.90             0.4352      4158.245.   0.8670.     477.312       
11 3.93             1.6235.     17901.154.  3.6001.     1763.733
12 7.37             4.3279.     33739.556.  7.5155.     3336.275
13 8.84             5.3649.     40282.567.  9.4488.     3994.122
14 14.41            8.1000.     64359.115.  15.5373.    6069.562
15 15.72.           8.9830.     70208.108.  18.1299.    6614.515
16 19.66            11.5980.    88701.951.  22.8235.    8496.186'''